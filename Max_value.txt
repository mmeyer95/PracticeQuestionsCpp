#include <iostream>
#include <time.h>
#include <vector>

bool getRandom(int n) {
	srand(time(NULL));
	int random = rand() % 100 + 1;			//random number 0-99
	if (random < (100) / n) {			//probability based on the number of occurrences
		return true;
	}
	return false;
}

int findMax(const std::vector<int>& a) {
	int max = -1;
	int freq = 0;
	int index = 0;
	for (int i = 0; i < a.size(); i++) {
		if (a[i] > max) {			//new max is found
			max = a[i];
			freq = 1;			//we've seen it 1 time
			index = i;			//no need to generate random # b/c it will come back true
		}
		if (a[i] == max) {
			freq += 1;
			if (getRandom(freq)) {		//replace index if new value chosen is in range
				index = i;		//will happen with probability of (1/freq)
			}
		}
	}
	return index;
}

int main()
{
	std::vector<int> a{ 1,-2,9,3,6,9,4,9 };
	int index = findMax(a);
	std::cout << "Max value of " << a[index] << " located at index " << index << std::endl;
}